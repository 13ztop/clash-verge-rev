name: Auto Sync from clash-verge-rev/clash-verge-rev

on:
  schedule:
    - cron: '0 0 * * *'  # 每天UTC时间0点（北京时间8点）自动同步
  workflow_dispatch:      # 允许手动触发

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      # 步骤 1: 验证所有必要的 Secrets 是否存在
      - name: Verify Secrets
        run: |
          # 分别检查每个secret
          if [ -z "${{ secrets.SYNC_TOKEN }}" ]; then
            echo "::error::SYNC_TOKEN未设置"
            exit 1
          fi
          
          if [ -z "${{ secrets.TELEGRAM_BOT_TOKEN }}" ]; then
            echo "::error::TELEGRAM_BOT_TOKEN未设置"
            exit 1
          fi
          
          if [ -z "${{ secrets.TELEGRAM_CHAT_ID }}" ]; then
            echo "::error::TELEGRAM_CHAT_ID未设置"
            exit 1
          fi
          
          echo "所有必需的Secrets已设置"
          # 安全地显示部分Token用于调试
          BOT_TOKEN="${{ secrets.TELEGRAM_BOT_TOKEN }}"
          echo "BOT_TOKEN_PART=${BOT_TOKEN:0:2}****${BOT_TOKEN: -2}" >> $GITHUB_ENV
          echo "CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}" >> $GITHUB_ENV

      # 步骤 2: 获取目标仓库的默认分支
      - name: Detect default branch
        id: branch_detector
        run: |
          echo "使用SYNC_TOKEN: ${SYNC_TOKEN:0:2}****${SYNC_TOKEN: -2}"
          DEFAULT_BRANCH=$(curl -s -H "Authorization: token ${{ secrets.SYNC_TOKEN }}" \
          "https://api.github.com/repos/13ztop/clash-verge-rev" | jq -r .default_branch)
          
          if [ -z "$DEFAULT_BRANCH" ] || [ "$DEFAULT_BRANCH" = "null" ]; then
            echo "::warning::无法获取默认分支，使用备用分支'main'"
            DEFAULT_BRANCH="main"
          fi
          
          echo "Detected default branch: $DEFAULT_BRANCH"
          echo "DEFAULT_BRANCH=$DEFAULT_BRANCH" >> $GITHUB_ENV

      # 步骤 3-14: [保持不变]...

      # 步骤 15: 设置时区（上海时间）
      - name: Set Shanghai time
        id: set_time
        run: |
          CURRENT_TIME=$(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M %Z')
          CURRENT_TIME_SHORT=$(TZ='Asia/Shanghai' date +'%H:%M %Z')
          echo "CURRENT_TIME=$CURRENT_TIME" >> $GITHUB_ENV
          echo "CURRENT_TIME_SHORT=$CURRENT_TIME_SHORT" >> $GITHUB_ENV

      # 步骤 16: 调试步骤 - 显示关键信息
      - name: Debug Information
        run: |
          echo "===== 调试信息 ====="
          echo "当前时间: ${{ env.CURRENT_TIME }}"
          echo "BOT_TOKEN_PART: ${{ env.BOT_TOKEN_PART }}"
          echo "CHAT_ID: ${{ env.CHAT_ID }}"
          echo "工作流状态: ${{ job.status }}"
          echo "源仓库版本: ${{ steps.source_version.outputs.commit_hash }}"
          echo "目标仓库版本: ${{ env.TARGET_COMMIT }}"
          echo "变更文件数: ${{ steps.commit_push.outputs.changes_count || '0' }}"
          echo "保留文件数: ${{ steps.find_protected.outputs.protected_files_count || '0' }}"
          echo "===================="

      # 步骤 17: 最终通知（修复版）
      - name: Final Telegram Notification
        if: always()  # 即使失败也发送
        uses: appleboy/telegram-action@v1.0.0
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          parse_mode: markdown
          message: |
            ${{ (success() && '✅' || '‼️') }} *Clash Verge Rev 同步报告 | ${{ env.CURRENT_TIME_SHORT }}*
            ━━━━━━━━━━━━━━━━━━━━━━━━
            • **状态**: ${{ (success() && '成功' || '失败') }}
            • **工作流**: [${{ github.workflow }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            • **源仓库**: [clash-verge-rev@${{ steps.source_version.outputs.commit_hash }}](https://github.com/clash-verge-rev/clash-verge-rev/commit/${{ steps.source_version.outputs.full_hash }})
            • **目标仓库**: [13ztop@${{ env.TARGET_COMMIT }}](https://github.com/13ztop/clash-verge-rev/commit/${{ github.sha }})
            ━━━━━━━━━━━━━━━━━━━━━━━━
            ${{ (steps.commit_push.outputs.changes_count != '0' && steps.commit_push.outputs.changes_count != '') && format('• **变更文件**: {0}', steps.commit_push.outputs.changes_count) || '' }}
            • **保留文件**: ${{ steps.find_protected.outputs.protected_files_count || '0' }}
            • **版本**: ${{ steps.source_version.outputs.tag || '无标签' }}
            • **运行时间**: ${{ env.CURRENT_TIME }}
            ━━━━━━━━━━━━━━━━━━━━━━━━
            ${{ (success() && '✅ 同步已完成\n[查看提交](' || '🚨 同步过程遇到错误\n[查看日志](') }}${{ github.server_url }}/${{ github.repository }}/${{ (success() && 'commit/' || 'actions/runs/') }}${{ (success() && github.sha || github.run_id) }})
